{"ast":null,"code":"var _jsxFileName = \"/root/youtube/freecodecamp/pern-todo/client/src/components/ListTodos.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\n//useEffect will do a fetch request to the API every time this component is rendered\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListTodos = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n\n  //delete todo function\n  const deleteTodo = async id => {\n    //using template literals = allows you to put variables within strings\n    //passing in id in template literal because we're targeting id's to delete\n    try {\n      const deleteTodo = await fetch(`http://localhost:5000/todos${id}`, {\n        method: \"DELETE\"\n      });\n      console.log(deleteTodo);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/todos\");\n      const jsonData = await response.json();\n      //have to parse first to get json data\n      //using setTodos because that's the only way to change the state\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  useEffect(() => {\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todos.map(todo =>\n        /*#__PURE__*/\n        //todo_id is what makes each data unique\n        _jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteTodo(todo.todo_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, todo.todo_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n        //have to specify what to delete so passing in todo.todo_id\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(ListTodos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = ListTodos;\nexport default ListTodos;\nvar _c;\n$RefreshReg$(_c, \"ListTodos\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","ListTodos","todos","setTodos","deleteTodo","id","fetch","method","console","log","err","error","message","getTodos","response","jsonData","json","map","todo","description","todo_id"],"sources":["/root/youtube/freecodecamp/pern-todo/client/src/components/ListTodos.js"],"sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\n//useEffect will do a fetch request to the API every time this component is rendered\n\nconst ListTodos= () => {\n\n    const [todos, setTodos] = useState([]);\n\n    //delete todo function\n    const deleteTodo = async id => {\n        //using template literals = allows you to put variables within strings\n        //passing in id in template literal because we're targeting id's to delete\n        try {\n            const deleteTodo = await fetch(`http://localhost:5000/todos${id}`, {\n                method: \"DELETE\"\n            });\n            console.log(deleteTodo)\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n    const getTodos = async() => {\n        try {\n            const response = await fetch (\"http://localhost:5000/todos\")\n            const jsonData = await response.json();\n            //have to parse first to get json data\n            //using setTodos because that's the only way to change the state\n            setTodos(jsonData);\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n    useEffect(() => {\n        getTodos();\n    }, []);\n\n    return (\n        <Fragment>\n            {\" \"}\n            <table class=\"table mt-5 text-center\">\n    <thead>\n      <tr>\n        <th>Description</th>\n        <th>Edit</th>\n        <th>Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n        {/* <tr>\n        <td>John</td>\n        <td>Doe</td>\n        <td>john@example.com</td>\n      </tr>*/}\n      {todos.map(todo => (\n        //todo_id is what makes each data unique\n        <tr key={todo.todo_id}>\n            <td>{todo.description}</td>\n            <td>Edit</td>\n            <td><button className=\"btn btn-danger\" onClick={() => deleteTodo(todo.todo_id)}>Delete</button></td>\n            \n        </tr>\n        //have to specify what to delete so passing in todo.todo_id\n      ))}\n    \n    </tbody>\n  </table>\n        </Fragment>\n    )\n}\n\nexport default ListTodos;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC1D;AAAA;AAEA,MAAMC,SAAS,GAAE,MAAM;EAAA;EAEnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMI,UAAU,GAAG,MAAMC,EAAE,IAAI;IAC3B;IACA;IACA,IAAI;MACA,MAAMD,UAAU,GAAG,MAAME,KAAK,CAAE,8BAA6BD,EAAG,EAAC,EAAE;QAC/DE,MAAM,EAAE;MACZ,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;IAC3B,CAAC,CAAC,OAAOM,GAAG,EAAE;MACVF,OAAO,CAACG,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMC,QAAQ,GAAG,YAAW;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAAE,6BAA6B,CAAC;MAC5D,MAAMS,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAI,EAAE;MACtC;MACA;MACAb,QAAQ,CAACY,QAAQ,CAAC;IACtB,CAAC,CAAC,OAAOL,GAAG,EAAE;MACVF,OAAO,CAACG,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;IAC9B;EACJ,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZc,QAAQ,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI,QAAC,QAAQ;IAAA,WACJ,GAAG,eACJ;MAAO,KAAK,EAAC,wBAAwB;MAAA,wBAC7C;QAAA,uBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAoB,eACpB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAa,eACb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAe;QAAA;UAAA;UAAA;UAAA;QAAA;MACZ;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UAMGX,KAAK,CAACe,GAAG,CAACC,IAAI;QAAA;QACb;QACA;UAAA,wBACI;YAAA,UAAKA,IAAI,CAACC;UAAW;YAAA;YAAA;YAAA;UAAA,QAAM,eAC3B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAa,eACb;YAAA,uBAAI;cAAQ,SAAS,EAAC,gBAAgB;cAAC,OAAO,EAAE,MAAMf,UAAU,CAACc,IAAI,CAACE,OAAO,CAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAgB;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA,GAH/FF,IAAI,CAACE,OAAO;UAAA;UAAA;UAAA;QAAA;QAMrB;QACD;MAAC;QAAA;QAAA;QAAA;MAAA,QAEI;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACS;AAEnB,CAAC;AAAA,GAlEKnB,SAAS;AAAA,KAATA,SAAS;AAoEf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}