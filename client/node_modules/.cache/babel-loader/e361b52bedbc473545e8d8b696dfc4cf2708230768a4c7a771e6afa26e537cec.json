{"ast":null,"code":"var _jsxFileName = \"/root/youtube/freecodecamp/pern-todo/client/src/components/InputTodo.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from 'react';\n\n//adds data into the table \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputTodo = () => {\n  _s();\n  //description is state. setDescription is the only way to change the state\n  const [description, setDescription] = useState(\"\");\n  const onSubmitForm = async e => {\n    //preventDefault prevents event from refreshing\n    e.preventDefault();\n    try {\n      const body = {\n        description\n      };\n      //by default, fetch create a get request\n      // always need to await a fetch request because it's a promise.\n      const response = await fetch(\"http://localhost:5000/todos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    //mt-5 means margin top 5\n    //onChange makes it possible to type in the input. Without it, there's nothing that \"changes\"\n    //onSubmit will be triggered when onSubmit happens on form\n    _jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mt-5\",\n        children: \"Pern Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"d-flex mt-5\",\n        onSubmit: onSubmitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(InputTodo, \"h9D/T9lgpWSoHPGgGzJJBrwKHw4=\");\n_c = InputTodo;\nexport default InputTodo;\nvar _c;\n$RefreshReg$(_c, \"InputTodo\");","map":{"version":3,"names":["React","Fragment","useState","InputTodo","description","setDescription","onSubmitForm","e","preventDefault","body","response","fetch","method","headers","JSON","stringify","window","location","err","console","error","message","target","value"],"sources":["/root/youtube/freecodecamp/pern-todo/client/src/components/InputTodo.js"],"sourcesContent":["import React, {Fragment, useState} from 'react';\n\n//adds data into the table \n\nconst InputTodo = () => {\n    //description is state. setDescription is the only way to change the state\n    const [description, setDescription] = useState(\"\");\n\n    const onSubmitForm = async e => {\n        //preventDefault prevents event from refreshing\n        e.preventDefault();\n        try {\n            const body = {description};\n            //by default, fetch create a get request\n            // always need to await a fetch request because it's a promise.\n            const response = await fetch(\"http://localhost:5000/todos\", {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify(body)\n            });\n\n            window.location = \"/\";\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n    \n    return (\n        //mt-5 means margin top 5\n        //onChange makes it possible to type in the input. Without it, there's nothing that \"changes\"\n        //onSubmit will be triggered when onSubmit happens on form\n        <Fragment>\n            <h1 className=\"text-center mt-5\">Pern Todo List</h1>\n            <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\n                <input type=\"text\" className=\"form-control\" value={description} onChange={e => setDescription(e.target.value)}/>\n                <button className='btn btn-success'>Add</button>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default InputTodo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,QAAQ,QAAO,OAAO;;AAE/C;AAAA;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMI,YAAY,GAAG,MAAMC,CAAC,IAAI;IAC5B;IACAA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI;MACA,MAAMC,IAAI,GAAG;QAACL;MAAW,CAAC;MAC1B;MACA;MACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI;MAC7B,CAAC,CAAC;MAEFO,MAAM,CAACC,QAAQ,GAAG,GAAG;IACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;IAC9B;EACJ,CAAC;EAED;IAAA;IACI;IACA;IACA;IACA,QAAC,QAAQ;MAAA,wBACL;QAAI,SAAS,EAAC,kBAAkB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpD;QAAM,SAAS,EAAC,aAAa;QAAC,QAAQ,EAAEf,YAAa;QAAA,wBACjD;UAAO,IAAI,EAAC,MAAM;UAAC,SAAS,EAAC,cAAc;UAAC,KAAK,EAAEF,WAAY;UAAC,QAAQ,EAAEG,CAAC,IAAIF,cAAc,CAACE,CAAC,CAACe,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE,eAChH;UAAQ,SAAS,EAAC,iBAAiB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7C;IAAA;MAAA;MAAA;MAAA;IAAA;EACA;AAEnB,CAAC;AAAA,GAnCKpB,SAAS;AAAA,KAATA,SAAS;AAqCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}